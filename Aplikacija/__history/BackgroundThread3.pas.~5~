unit BackgroundThread3;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.Edit, FMX.StdCtrls, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.FMXUI.Wait, Data.DB, FireDAC.Comp.Client,FireDAC.Stan.Param,
  FMX.Objects;

type
  TMyBackgroundThread3 = class(TThread)
  protected
    procedure Execute; override;
  end;

implementation

uses Main,Normiranje,NProizvod;

procedure TMyBackgroundThread3.Execute;
begin
  while not Terminated do
  begin
var
MyQuery: TFDQuery;
var
Index:integer;
Index:=frmNormiranje.Label1.Text.ToInteger + 1;

var
  IDProizvoda: string;
var
  Sifra: string;
var
  Naziv: string;
var
  Dimenzija: string;
var
  JedinicaMere: string;
var
  BojaKrila: string;
var
  MaterijalKrila: string;
var
  StokMaterijal: string;
var
  BojaStoka: string;
var
  Okov: string;
var
  MaterijalBrave: string;


    begin
    MyQuery := TFDQuery.Create(nil);
    try
      MyQuery.Connection := GlobalConnection;
      MyQuery.SQL.Text := 'SELECT * FROM SifarnikProizvoda WHERE IDProizvoda = :ID';
      MyQuery.Params.ParamByName('ID').AsInteger := Index;
      MyQuery.Open;

      if not MyQuery.IsEmpty then
       begin
      IDProizvoda := MyQuery.FieldByName('ID proizvoda').AsString;
      Sifra := MyQuery.FieldByName('sifra').AsString;
      Naziv := MyQuery.FieldByName('Naziv').AsString;
      frmNProizvod.Label1.Text:= MyQuery.FieldByName('Naziv').AsString;
      Dimenzija := MyQuery.FieldByName('Dimenzija').AsString;
      JedinicaMere := MyQuery.FieldByName('Jedinica mere').AsString;
      BojaKrila := MyQuery.FieldByName('Boja krila').AsString;
      MaterijalKrila := MyQuery.FieldByName('Materijal krila').AsString;
      StokMaterijal := MyQuery.FieldByName('Stok_materijal').AsString;
      BojaStoka := MyQuery.FieldByName('Boja stoka').AsString;
      Okov := MyQuery.FieldByName('Okov').AsString;
      MaterijalBrave := MyQuery.FieldByName('Materijal brave').AsString;

      frmNProizvod.StringGrid1.RowCount := 2; // Number of rows
      frmNProizvod.StringGrid1.Cells[0, 0] := 'ID Proizvoda';
      frmNProizvod.StringGrid1.Cells[1, 0] := 'Sifra';
      frmNProizvod.StringGrid1.Cells[2, 0] := 'Naziv';
      frmNProizvod.StringGrid1.Cells[3, 0] := 'Dimenzija';
      frmNProizvod.StringGrid1.Cells[4, 0] := 'Jedinica Mere';
      frmNProizvod.StringGrid1.Cells[5, 0] := 'Boja Krila';
      frmNProizvod.StringGrid1.Cells[6, 0] := 'Materijal Krila';
      frmNProizvod.StringGrid1.Cells[7, 0] := 'Stok Meterijal';
      frmNProizvod.StringGrid1.Cells[8, 0] := 'Boja Stoka';
      frmNProizvod.StringGrid1.Cells[9, 0] := 'Okov';
      frmNProizvod.StringGrid1.Cells[10, 0] := 'Materijal brave';

      frmNProizvod.StringGrid1.Cells[0, 1] := IDProizvoda;
      frmNProizvod.StringGrid1.Cells[1, 1] := Sifra;
      frmNProizvod.StringGrid1.Cells[2, 1] := Naziv;
      frmNProizvod.StringGrid1.Cells[3, 1] := Dimenzija;
      frmNProizvod.StringGrid1.Cells[4, 1] := JedinicaMere;
      frmNProizvod.StringGrid1.Cells[5, 1] := BojaKrila;
      frmNProizvod.StringGrid1.Cells[6, 1] := MaterijalKrila;
      frmNProizvod.StringGrid1.Cells[7, 1] := StokMaterijal;
      frmNProizvod.StringGrid1.Cells[8, 1] := BojaStoka;
      frmNProizvod.StringGrid1.Cells[9, 1] := Okov;
      frmNProizvod.StringGrid1.Cells[10, 1] := MaterijalBrave;

      end;

    finally
      MyQuery.Free;

    end;
    end;
    Sleep(500); // Wait for a second before repeating
  end;
end;

end.
