unit Normiranje;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.ListBox,
  FMX.Layouts, FMX.Controls.Presentation, FMX.StdCtrls, FMX.Objects;

type
  TfrmNormiranje = class(TForm)
    ListBox1: TListBox;
    bottom_bar: TRectangle;
    Back: TButton;
    toolbar: TToolBar;
    logo: TImage;
    PROIZVODI: TLabel;
    Image1: TImage;
    procedure FormCreate(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmNormiranje: TfrmNormiranje;

implementation
{$R *.fmx}


uses SobnaVrata, DvokrilnaVrata, VrataSigurnosna, VrataKlizna, HarmonikaVrata,Main;




procedure TfrmNormiranje.FormCreate(Sender: TObject);
begin
var
MyQuery: TFDQuery;
var
MyQuery2: TFDQuery;
var
BrRed: integer;
var
I:integer;
  begin
    MyQuery := TFDQuery.Create(nil);
    try
      MyQuery.Connection := GlobalConnection;
      MyQuery.SQL.Text := 'SELECT COUNT(*) FROM SifarnikProizvoda';
      MyQuery.Open;

      if not MyQuery.IsEmpty then
      begin
      BrRed := MyQuery.Fields[0].AsInteger;

      for I := 1 to BrRed do
      begin
       MyQuery2 := TFDQuery.Create(nil);
       MyQuery2.Connection := GlobalConnection;
        MyQuery2.SQL.Text := 'SELECT * FROM SifarnikProizvoda WHERE IDproizvoda = :I';
        MyQuery2.ParamByName('I').AsInteger := I;
        MyQuery2.Open;
        if not MyQuery2.IsEmpty then
        begin
        ListBox1.Items.Add(MyQuery2.FieldByName('Naziv').AsString);
        end;
        MyQuery2.Free;
      end;

      end;

    finally
      MyQuery.Free;

    end;
  end;

end.
